eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"crash-events/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"crash-events/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=crash-events/app.js");

;eval("define(\"crash-events/initializers/export-application-global\", \n  [\"ember\",\"crash-events/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      var classifiedName = Ember.String.classify(config.modulePrefix);\n\n      if (config.exportApplicationGlobal) {\n        window[classifiedName] = application;\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \'export-application-global\',\n\n      initialize: initialize\n    };\n  });//# sourceURL=crash-events/initializers/export-application-global.js");

;eval("define(\"crash-events/router\", \n  [\"ember\",\"crash-events/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'about\');\n      this.route(\'insights\');\n      this.route(\'maps\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=crash-events/router.js");

;eval("define(\"crash-events/templates/about\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"about\\n\");\n      \n    });\n  });//# sourceURL=crash-events/templates/about.js");

;eval("define(\"crash-events/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"Home\");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"Maps\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"Insights\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"About\");\n      }\n\n      data.buffer.push(\"  <nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n      <!-- Brand and toggle get grouped for better mobile display -->\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n\\n      \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'class\': (\"navbar-brand\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"index\", options) : helperMissing.call(depth0, \"link-to\", \"index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\">\\n      <ul class=\\\"nav navbar-nav navbar-right\\\">\\n        <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"maps\", options) : helperMissing.call(depth0, \"link-to\", \"maps\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n        <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"insights\", options) : helperMissing.call(depth0, \"link-to\", \"insights\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n        <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"about\", options) : helperMissing.call(depth0, \"link-to\", \"about\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </nav>\\n\\n  <div class=\\\"container\\\">\\n    \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=crash-events/templates/application.js");

;eval("define(\"crash-events/templates/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<p>Range: 2009 - 2014</p>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10\\\">\\n    <img src=\\\"/images/map.png\\\">\\n  </div>\\n  <div class=\\\"col-md-2\\\">\\n    <p>Seasons: All</p>\\n    <ul>\\n      <li class=\\\"season\\\"><a href=\\\"#\\\">Spring</a></li>\\n      <li class=\\\"season\\\"><a href=\\\"#\\\">Summer</a></li>\\n      <li class=\\\"season\\\"><a href=\\\"#\\\">Fall</a></li>\\n      <li class=\\\"season\\\"><a href=\\\"#\\\">Winter</a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-10 btn-group\\\">\\n    <div class=\\\"btn btn-default\\\">2009</div>\\n    <div class=\\\"btn btn-default\\\">2010</div>\\n    <div class=\\\"btn btn-default\\\">2011</div>\\n    <div class=\\\"btn btn-default\\\">2012</div>\\n    <div class=\\\"btn btn-default\\\">2013</div>\\n    <div class=\\\"btn btn-default\\\">2014</div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"pull-left\\\">\\n    <p>Filter By:</p>\\n    <div class=\\\"radio\\\">\\n      <label>\\n        <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios1\\\" value=\\\"option1\\\" checked>\\n        Year\\n      </label>\\n    </div>\\n    <div class=\\\"radio\\\">\\n      <label>\\n        <input type=\\\"radio\\\" name=\\\"optionsRadios\\\" id=\\\"optionsRadios2\\\" value=\\\"option2\\\">\\n        Month\\n      </label>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <h2>What is this data?</h2>\\n    <p>Hella narwhal Cosby sweater McSweeney\'s, salvia kitsch before they sold out High Life. Umami tattooed sriracha meggings pickled Marfa Blue Bottle High Life next level four loko PBR. Keytar pickled next level keffiyeh drinking vinegar street art. Art party vinyl Austin, retro whatever keytar mixtape. Pickled ethnic farm-to-table distillery ugh chia.</p>\\n\\n    <p>Ethical Odd Future narwhal, mlkshk fap asymmetrical next level High Life literally cred blog. Banh mi swag art party, fashion axe you probably haven\'t heard of them stumptown tousled food truck post-ironic quinoa bicycle rights aesthetic keytar Pitchfork.</p>\\n    <h2>Who is this data for?</h2>\\n    <p>Hella narwhal Cosby sweater McSweeney\'s, salvia kitsch before they sold out High Life. Umami tattooed sriracha meggings pickled Marfa Blue Bottle High Life next level four loko PBR. Keytar pickled next level keffiyeh drinking vinegar street art. Art party vinyl Austin, retro whatever keytar mixtape. Pickled ethnic farm-to-table distillery ugh chia.</p>\\n\\n    <p>Ethical Odd Future narwhal, mlkshk fap asymmetrical next level High Life literally cred blog. Banh mi swag art party, fashion axe you probably haven\'t heard of them stumptown tousled food truck post-ironic quinoa bicycle rights aesthetic keytar Pitchfork.</p>\\n  </div>\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=crash-events/templates/index.js");

;eval("define(\"crash-events/templates/insights\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"insights\\n\");\n      \n    });\n  });//# sourceURL=crash-events/templates/insights.js");

;eval("define(\"crash-events/templates/maps\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"maps\\n\");\n      \n    });\n  });//# sourceURL=crash-events/templates/maps.js");

;eval("define(\"crash-events/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=crash-events/tests/app.jshint.js");

;eval("define(\"crash-events/tests/crash-events/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - crash-events/tests/helpers\');\n    test(\'crash-events/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'crash-events/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=crash-events/tests/crash-events/tests/helpers/resolver.jshint.js");

;eval("define(\"crash-events/tests/crash-events/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - crash-events/tests/helpers\');\n    test(\'crash-events/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'crash-events/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=crash-events/tests/crash-events/tests/helpers/start-app.jshint.js");

;eval("define(\"crash-events/tests/crash-events/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - crash-events/tests\');\n    test(\'crash-events/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'crash-events/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=crash-events/tests/crash-events/tests/test-helper.jshint.js");

;eval("define(\"crash-events/tests/helpers/resolver\", \n  [\"ember/resolver\",\"crash-events/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=crash-events/tests/helpers/resolver.js");

;eval("define(\"crash-events/tests/helpers/start-app\", \n  [\"ember\",\"crash-events/app\",\"crash-events/router\",\"crash-events/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=crash-events/tests/helpers/start-app.js");

;eval("define(\"crash-events/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=crash-events/tests/router.jshint.js");

;eval("define(\"crash-events/tests/test-helper\", \n  [\"crash-events/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \'hidden\' : \'visible\';\n    document.getElementById(\'ember-testing-container\').style.visibility = containerVisibility;\n  });//# sourceURL=crash-events/tests/test-helper.js");

/* jshint ignore:start */

define('crash-events/config/environment', ['ember'], function(Ember) {
  var prefix = 'crash-events';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */


});

if (runningTests) {
  require('crash-events/tests/test-helper');
} else {
  require('crash-events/app')['default'].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}

/* jshint ignore:end */
